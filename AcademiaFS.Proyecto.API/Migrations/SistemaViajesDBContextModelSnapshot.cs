// <auto-generated />
using System;
using AcademiaFS.Proyecto.API.Infrastructure.SistemaViajes.Maps;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcademiaFS.Proyecto.API.Migrations
{
    [DbContext(typeof(SistemaViajesDBContext))]
    partial class SistemaViajesDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Colaboradores.Entities.Colaboradore", b =>
                {
                    b.Property<int>("IdColaborador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColaborador"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<bool?>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int");

                    b.Property<string>("Identidad")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int>("UsuaCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuaModificacion")
                        .HasColumnType("int");

                    b.HasKey("IdColaborador")
                        .HasName("PK_Colaboradores_IdColaborador");

                    b.HasIndex(new[] { "Identidad" }, "UC_Colaboradores_Identidad")
                        .IsUnique();

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Colaboradores.Entities.SucursalesXcolaboradore", b =>
                {
                    b.Property<int>("IdSucursalXcolaborador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdSucursalXColaborador");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSucursalXcolaborador"));

                    b.Property<decimal>("DistanciaKm")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<int>("UsuaCreacion")
                        .HasColumnType("int");

                    b.HasKey("IdSucursalXcolaborador")
                        .HasName("PK_SucursalesXColaboradores_IdSucursalXColaborador");

                    b.HasIndex("IdColaborador");

                    b.HasIndex(new[] { "IdSucursal", "IdColaborador" }, "UC_SucursalesXColaboradores_IdSucursal_IdColaborador")
                        .IsUnique();

                    b.ToTable("SucursalesXColaboradores", (string)null);
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.EstadosCiviles.Entities.EstadoCivil", b =>
                {
                    b.Property<int>("IdEstadoCivil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstadoCivil"));

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UsuaCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuaModificacion")
                        .HasColumnType("int");

                    b.HasKey("IdEstadoCivil")
                        .HasName("PK_EstadosCiviles_IdEstadoCivil");

                    b.HasIndex(new[] { "Nombre" }, "UC_EstadosCiviles_Nombre")
                        .IsUnique();

                    b.ToTable("EstadosCiviles");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Roles.Entities.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<bool?>("RolEstado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RolFechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RolFechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("RolNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolUsuaCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("RolUsuaModificacion")
                        .HasColumnType("int");

                    b.HasKey("RolId");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Sucursales.Entities.Sucursale", b =>
                {
                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSucursal"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<bool?>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("UsuaCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuaModificacion")
                        .HasColumnType("int");

                    b.HasKey("IdSucursal")
                        .HasName("PK_Sucursales_IdSucursal");

                    b.HasIndex(new[] { "Nombre" }, "UC_Sucursales_Nombre")
                        .IsUnique();

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Transportistas.Entities.Transportista", b =>
                {
                    b.Property<int>("IdTransportista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTransportista"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool?>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Identidad")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<decimal>("TarifaKm")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UsuaCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuaModificacion")
                        .HasColumnType("int");

                    b.HasKey("IdTransportista")
                        .HasName("PK_Transportistas_IdTransportista");

                    b.HasIndex(new[] { "Identidad" }, "UC_Transportistas_Identidad")
                        .IsUnique();

                    b.ToTable("Transportistas");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Usuarios.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("usua_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Admin")
                        .HasColumnType("bit")
                        .HasColumnName("usua_EsAdmin");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("usua_Contrasena");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("usua_Estado");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime")
                        .HasColumnName("usua_FechaCreacion");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime")
                        .HasColumnName("usua_FechaModificacion ");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("usua_Imagen");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("usua_Nombre");

                    b.Property<int>("UsuaCreacion")
                        .HasColumnType("int")
                        .HasColumnName("usua_UsuaCreacion");

                    b.Property<int?>("UsuaModificacion")
                        .HasColumnType("int")
                        .HasColumnName("usua_UsuaModificacion ");

                    b.Property<int?>("rolId")
                        .HasColumnType("int")
                        .HasColumnName("role_Id");

                    b.HasKey("Id")
                        .HasName("PK_acce_tbUsuarios_usua_Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.HasIndex("rolId");

                    b.ToTable("tbUsuarios", (string)null);
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Viajes.Entities.Viaje", b =>
                {
                    b.Property<int>("IdViaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdViaje"));

                    b.Property<bool?>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaYhora")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaYHora");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<int>("IdTransportista")
                        .HasColumnType("int");

                    b.Property<int>("IdTransportistaNavigationIdTransportista")
                        .HasColumnType("int");

                    b.Property<int?>("SucursaleIdSucursal")
                        .HasColumnType("int");

                    b.Property<decimal>("TarifaActual")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalKm")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UsuaCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuaModificacion")
                        .HasColumnType("int");

                    b.HasKey("IdViaje")
                        .HasName("PK_Viajes_IdViaje");

                    b.HasIndex("IdTransportistaNavigationIdTransportista");

                    b.HasIndex("SucursaleIdSucursal");

                    b.ToTable("Viajes");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Viajes.Entities.ViajesDetalle", b =>
                {
                    b.Property<int>("IdViajeDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdViajeDetalle"));

                    b.Property<decimal>("DistanciaActual")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool?>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdColaborador")
                        .HasColumnType("int");

                    b.Property<int>("IdViaje")
                        .HasColumnType("int");

                    //b.Property<int>("IdViajeNavigationIdViaje")
                    //    .HasColumnType("int");

                    b.Property<int>("UsuaCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("UsuaModificacion")
                        .HasColumnType("int");

                    b.HasKey("IdViajeDetalle")
                        .HasName("PK_ViajesDetalles_IdViajeDetalle");

                    b.HasIndex("IdColaborador");

                    //b.HasIndex("IdViajeNavigationIdViaje");

                    b.ToTable("ViajeDetalles");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Colaboradores.Entities.SucursalesXcolaboradore", b =>
                {
                    b.HasOne("AcademiaFS.Proyecto.API._Features.Colaboradores.Entities.Colaboradore", "IdColaboradorNavigation")
                        .WithMany("SucursalesXcolaboradores")
                        .HasForeignKey("IdColaborador")
                        .IsRequired();

                    b.Navigation("IdColaboradorNavigation");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Usuarios.Entities.Usuario", b =>
                {
                    b.HasOne("AcademiaFS.Proyecto.API._Features.Roles.Entities.Rol", "role")
                        .WithMany("Usuarios")
                        .HasForeignKey("rolId")
                        .HasConstraintName("FK_acce_tbUsuarios_tbRoles_role_Id");

                    b.Navigation("role");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Viajes.Entities.Viaje", b =>
                {
                    b.HasOne("AcademiaFS.Proyecto.API._Features.Transportistas.Entities.Transportista", "IdTransportistaNavigation")
                        .WithMany()
                        .HasForeignKey("IdTransportistaNavigationIdTransportista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcademiaFS.Proyecto.API._Features.Sucursales.Entities.Sucursale", null)
                        .WithMany("Viajes")
                        .HasForeignKey("SucursaleIdSucursal");

                    b.Navigation("IdTransportistaNavigation");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Viajes.Entities.ViajesDetalle", b =>
                {
                    b.HasOne("AcademiaFS.Proyecto.API._Features.Colaboradores.Entities.Colaboradore", "IdColaboradorNavigation")
                        .WithMany("ViajesDetalles")
                        .HasForeignKey("IdColaborador")
                        .IsRequired();

                    //b.HasOne("AcademiaFS.Proyecto.API._Features.Viajes.Entities.Viaje", "IdViajeNavigation")
                    //    .WithMany("ViajesDetalles")
                    //    .HasForeignKey("IdViajeNavigationIdViaje")
                    //    .OnDelete(DeleteBehavior.Cascade)
                    //    .IsRequired();

                    b.Navigation("IdColaboradorNavigation");

                    b.Navigation("IdViajeNavigation");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Colaboradores.Entities.Colaboradore", b =>
                {
                    b.Navigation("SucursalesXcolaboradores");

                    b.Navigation("ViajesDetalles");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Roles.Entities.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Sucursales.Entities.Sucursale", b =>
                {
                    b.Navigation("Viajes");
                });

            modelBuilder.Entity("AcademiaFS.Proyecto.API._Features.Viajes.Entities.Viaje", b =>
                {
                    b.Navigation("ViajesDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
